# nginx log message grok for the `combined` pattern
#
# log_format combined '$remote_addr - $remote_user [$time_local] '
#                     '"$request" $status $body_bytes_sent '
#                     '"$http_referer" "$http_user_agent"';
#
# log_format custom '$remote_addr - $remote_user [$time_local] '
#                   '"$request" i$status $body_bytes_sent '
#                   '"$http_referer" "$http_user_agent" '
#                   '"$http_x_forwarded_for" $request_time '
#                   '$host $upstream_response_time $pipe';
#
# Default err format: YYYY/MM/DD HH:MM:SS [LEVEL] PROC_ID#THREAD_ID: *CONN_ID MESSAGE

filter {
  if [program] == "nginx" {
    grok {
      break_on_match => true
      match => { "message" => [
        "%{IPORHOST:remote_addr} - %{USERNAME:remote_user} \[%{HTTPDATE:time_local}\] %{QS:request} %{INT:status} %{INT:body_bytes_sent} %{QS:http_referer} %{QS:http_user_agent}",
        "%{IPORHOST:remote_addr} - %{USERNAME:remote_user} \[%{HTTPDATE:time_local}\] %{QS:request} %{INT:status} %{INT:body_bytes_sent} %{QS:http_referer} %{QS:http_user_agent} %{QS:$http_x_forwarded_for} %{NUMBER:request_time} %{IPORHOST:host} (?:%{NUMBER:upstream_response_time}|-) (?<pipelined_status>[.p]?)",
        "%{YEAR}/%{MONTHNUM2}/%{MONTHDAY} %{HOUR}:%{MINUTE}:%{SECOND} \[%{WORD:ERR_LEVEL}\] %{NUMBER:PROC_ID}#%{NUMBER:THREAD_ID}: *%{NUMBER:CONNECTION_ID} %{GREEDYDATA:MESSAGE}" ]
      }
    }
  }
}
