##################################################
# Write a title summarizing what this commit does.
# Start with an uppercase imperative verb, such as
# Add, Drop, Fix, Refactor, Bump; see ideas below.
# Think of your title as akin to an email subject,
# so you don't need to end with a sentence period.
# Use 50 char maximum, which is this line's width.
##################################################
Add your title here

########################################################################
# Why is this change happening?
# Describe the purpose, such as a goal, or use case, or user story, etc.
# For every line, use 72 char maximum width, which is this line's width.
########################################################################
What is going on in this changeset and why:

########################################################################
# How is this change happening?
# Describe any relevant algorithms, protocols, implementation spec, etc.
# For every line, use 72 char maximum width, which is this line's width.
########################################################################
How:

########################################################################
# Add any tags you want, such as search text, hashtags, keywords, codes.
########################################################################
Tags:

Does this change require database backup? : Yes / No
Are changes monitored using APM or infrastructure monitoring? : Yes / No / NA
Documentation Updated? : Yes / No / NA

TODO:
########################################################################
#
#   Add = Create a capability e.g. feature, test, dependency.
#   Drop = Delete a capability e.g. feature, test, dependency.
#   Fix = Fix an issue e.g. bug, typo, accident, misstatement.
#   Bump = Increase the version of something e.g. a dependency.
#   Make = Change the build process, or tools, or infrastructure.
#   Start = Begin doing something; e.g. enable a toggle, feature flag, etc.
#   Stop = End doing something; e.g. disable a toggle, feature flag, etc.
#   Optimize = A change that MUST be just about performance, e.g. speed up code.
#   Document = A change that MUST be only in the documentation, e.g. help files.
#   Refactor = A change that MUST be just refactoring.
#   Reformat = A change that MUST be just format, e.g. indent line, trim space, etc.
#   Rephrase = A change that MUST be just textual, e.g. edit a comment, doc, etc.
#
 ## Usage ##
#
# Put the template file here:
#
#     ~/.git-commit-template.txt
#
# Configure git to use the template file by running:
#
#     git config --global commit.template ~/.git-commit-template.txt
#
# Add the template file to the ~/.gitconfig file:
#
#     [commit]
#       template = ~/.git-commit-template.txt
#
#
# ## Usage needs commit.cleanup strip ##
#
# This template intends for the commit to strip the comments.
#
# To strip the comments, your git `commit.cleanup` config must be `strip`.
#
# If you don't use `strip`, then these commit comments won't be deleted.
#
#
