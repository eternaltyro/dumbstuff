server {
  listen 443 ssl default deferred;
  server_name mysite.com www.mysite.com;

  #
  # Mitigate slowloris type attacks that keep connections open for a long time by
  # sending infrequent requests reducing nginx's capacity to accept new connections
  #
  client_body_timeout 5s;
  client_header_timeout 5s;

  #
  # Protocols and cipher negotions have been set in the http block::nginx.conf
  #
  ssl_certificate /etc/nginx/ssl/star_forgott_com.crt;
  ssl_certificate_key /etc/nginx/ssl/star_forgott_com.key;

  # enable session resumption to improve https performance
  # http://vincent.bernat.im/en/blog/2011-ssl-session-reuse-rfc5077.html
  # 50 mb session cache
  ssl_session_cache shared:SSL:50m;
  ssl_session_timeout 5m;

  # Diffie-Hellman parameter for DHE ciphersuites, recommended 2048 bits
  ssl_dhparam /etc/nginx/ssl/dhparam.pem;

  # enable ocsp stapling (mechanism by which a site can convey certificate revocation information to visitors in a privacy-preserving, scalable manner)
  # http://blog.mozilla.org/security/2013/07/29/ocsp-stapling-in-firefox/
  resolver 8.8.8.8;
  ssl_stapling on;
  ssl_trusted_certificate /etc/nginx/ssl/star_forgott_com.crt;

  # config to enable HSTS(HTTP Strict Transport Security) https://developer.mozilla.org/en-US/docs/Security/HTTP_Strict_Transport_Security
  # to avoid ssl stripping https://en.wikipedia.org/wiki/SSL_stripping#SSL_stripping
  # add_header Strict-Transport-Security "max-age=31536000; includeSubdomains;";
  add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

  # ... the rest of your configuration
}

# redirect all http traffic to https
server {
  listen 80;
  server_name .forgott.com;
  return 301 https://$host$request_uri;
}
